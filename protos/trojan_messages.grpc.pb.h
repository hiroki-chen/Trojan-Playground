// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: trojan_messages.proto
#ifndef GRPC_trojan_5fmessages_2eproto__INCLUDED
#define GRPC_trojan_5fmessages_2eproto__INCLUDED

#include "trojan_messages.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace trojan {

class TrojanBaseService final {
 public:
  static constexpr char const* service_full_name() {
    return "trojan.TrojanBaseService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status PrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncPrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncPrintStringOnServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncPrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncPrintStringOnServerRaw(context, request, cq));
    }
    virtual ::grpc::Status ShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncShutDownServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncShutDownServerRaw(context, request, cq));
    }
    virtual ::grpc::Status ShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncShutDownCancelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncShutDownCancelRaw(context, request, cq));
    }
    virtual ::grpc::Status GetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::trojan::SimpleStringMessage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>> AsyncGetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>>(AsyncGetFileListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>> PrepareAsyncGetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>>(PrepareAsyncGetFileListRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::trojan::SimpleStringMessage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>> AsyncGetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>>(AsyncGetSnapShotRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>> PrepareAsyncGetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>>(PrepareAsyncGetSnapShotRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteFileRaw(context, request, cq));
    }
    virtual ::grpc::Status UploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUploadFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUploadFileRaw(context, request, cq));
    }
    virtual ::grpc::Status DownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::trojan::FileMessage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::FileMessage>> AsyncDownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::FileMessage>>(AsyncDownloadFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::FileMessage>> PrepareAsyncDownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::trojan::FileMessage>>(PrepareAsyncDownloadFileRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void PrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::SimpleStringMessage* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::SimpleStringMessage* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::trojan::SimpleStringMessage* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::trojan::SimpleStringMessage* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::FileMessage* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::FileMessage* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncPrintStringOnServerRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncPrintStringOnServerRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncShutDownServerRaw(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncShutDownServerRaw(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncShutDownCancelRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncShutDownCancelRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>* AsyncGetFileListRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>* PrepareAsyncGetFileListRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>* AsyncGetSnapShotRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::trojan::SimpleStringMessage>* PrepareAsyncGetSnapShotRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUploadFileRaw(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUploadFileRaw(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::trojan::FileMessage>* AsyncDownloadFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::trojan::FileMessage>* PrepareAsyncDownloadFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status PrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncPrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncPrintStringOnServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncPrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncPrintStringOnServerRaw(context, request, cq));
    }
    ::grpc::Status ShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncShutDownServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncShutDownServerRaw(context, request, cq));
    }
    ::grpc::Status ShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncShutDownCancelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncShutDownCancelRaw(context, request, cq));
    }
    ::grpc::Status GetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::trojan::SimpleStringMessage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>> AsyncGetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>>(AsyncGetFileListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>> PrepareAsyncGetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>>(PrepareAsyncGetFileListRaw(context, request, cq));
    }
    ::grpc::Status GetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::trojan::SimpleStringMessage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>> AsyncGetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>>(AsyncGetSnapShotRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>> PrepareAsyncGetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>>(PrepareAsyncGetSnapShotRaw(context, request, cq));
    }
    ::grpc::Status DeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteFileRaw(context, request, cq));
    }
    ::grpc::Status UploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUploadFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUploadFileRaw(context, request, cq));
    }
    ::grpc::Status DownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::trojan::FileMessage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::FileMessage>> AsyncDownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::FileMessage>>(AsyncDownloadFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::FileMessage>> PrepareAsyncDownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::trojan::FileMessage>>(PrepareAsyncDownloadFileRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void PrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void PrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::SimpleStringMessage* response, std::function<void(::grpc::Status)>) override;
      void GetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::SimpleStringMessage* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::trojan::SimpleStringMessage* response, std::function<void(::grpc::Status)>) override;
      void GetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::trojan::SimpleStringMessage* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void UploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::FileMessage* response, std::function<void(::grpc::Status)>) override;
      void DownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::FileMessage* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncPrintStringOnServerRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncPrintStringOnServerRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncShutDownServerRaw(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncShutDownServerRaw(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncShutDownCancelRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncShutDownCancelRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>* AsyncGetFileListRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>* PrepareAsyncGetFileListRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>* AsyncGetSnapShotRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>* PrepareAsyncGetSnapShotRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUploadFileRaw(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUploadFileRaw(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::trojan::FileMessage>* AsyncDownloadFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::trojan::FileMessage>* PrepareAsyncDownloadFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_PrintStringOnServer_;
    const ::grpc::internal::RpcMethod rpcmethod_ShutDownServer_;
    const ::grpc::internal::RpcMethod rpcmethod_ShutDownCancel_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFileList_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSnapShot_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteFile_;
    const ::grpc::internal::RpcMethod rpcmethod_UploadFile_;
    const ::grpc::internal::RpcMethod rpcmethod_DownloadFile_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status PrintStringOnServer(::grpc::ServerContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status ShutDownServer(::grpc::ServerContext* context, const ::trojan::ShutDownServerMessage* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status ShutDownCancel(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetFileList(::grpc::ServerContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::SimpleStringMessage* response);
    virtual ::grpc::Status GetSnapShot(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::trojan::SimpleStringMessage* response);
    virtual ::grpc::Status DeleteFile(::grpc::ServerContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status UploadFile(::grpc::ServerContext* context, const ::trojan::FileMessage* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status DownloadFile(::grpc::ServerContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::FileMessage* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_PrintStringOnServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PrintStringOnServer() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_PrintStringOnServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PrintStringOnServer(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPrintStringOnServer(::grpc::ServerContext* context, ::trojan::SimpleStringMessage* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShutDownServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ShutDownServer() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ShutDownServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownServer(::grpc::ServerContext* /*context*/, const ::trojan::ShutDownServerMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShutDownServer(::grpc::ServerContext* context, ::trojan::ShutDownServerMessage* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShutDownCancel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ShutDownCancel() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ShutDownCancel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownCancel(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShutDownCancel(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFileList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFileList() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetFileList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileList(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFileList(::grpc::ServerContext* context, ::trojan::SimpleStringMessage* request, ::grpc::ServerAsyncResponseWriter< ::trojan::SimpleStringMessage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSnapShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSnapShot() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetSnapShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSnapShot(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSnapShot(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::trojan::SimpleStringMessage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteFile() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteFile(::grpc::ServerContext* context, ::trojan::SimpleStringMessage* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UploadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UploadFile() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_UploadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadFile(::grpc::ServerContext* /*context*/, const ::trojan::FileMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadFile(::grpc::ServerContext* context, ::trojan::FileMessage* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DownloadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DownloadFile() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_DownloadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DownloadFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDownloadFile(::grpc::ServerContext* context, ::trojan::SimpleStringMessage* request, ::grpc::ServerAsyncResponseWriter< ::trojan::FileMessage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_PrintStringOnServer<WithAsyncMethod_ShutDownServer<WithAsyncMethod_ShutDownCancel<WithAsyncMethod_GetFileList<WithAsyncMethod_GetSnapShot<WithAsyncMethod_DeleteFile<WithAsyncMethod_UploadFile<WithAsyncMethod_DownloadFile<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_PrintStringOnServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PrintStringOnServer() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::trojan::SimpleStringMessage, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response) { return this->PrintStringOnServer(context, request, response); }));}
    void SetMessageAllocatorFor_PrintStringOnServer(
        ::grpc::MessageAllocator< ::trojan::SimpleStringMessage, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::trojan::SimpleStringMessage, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PrintStringOnServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PrintStringOnServer(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PrintStringOnServer(
      ::grpc::CallbackServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ShutDownServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ShutDownServer() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::trojan::ShutDownServerMessage, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::trojan::ShutDownServerMessage* request, ::google::protobuf::Empty* response) { return this->ShutDownServer(context, request, response); }));}
    void SetMessageAllocatorFor_ShutDownServer(
        ::grpc::MessageAllocator< ::trojan::ShutDownServerMessage, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::trojan::ShutDownServerMessage, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ShutDownServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownServer(::grpc::ServerContext* /*context*/, const ::trojan::ShutDownServerMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ShutDownServer(
      ::grpc::CallbackServerContext* /*context*/, const ::trojan::ShutDownServerMessage* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ShutDownCancel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ShutDownCancel() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->ShutDownCancel(context, request, response); }));}
    void SetMessageAllocatorFor_ShutDownCancel(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ShutDownCancel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownCancel(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ShutDownCancel(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFileList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFileList() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::trojan::SimpleStringMessage, ::trojan::SimpleStringMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::SimpleStringMessage* response) { return this->GetFileList(context, request, response); }));}
    void SetMessageAllocatorFor_GetFileList(
        ::grpc::MessageAllocator< ::trojan::SimpleStringMessage, ::trojan::SimpleStringMessage>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::trojan::SimpleStringMessage, ::trojan::SimpleStringMessage>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFileList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileList(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFileList(
      ::grpc::CallbackServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::SimpleStringMessage* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSnapShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSnapShot() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::trojan::SimpleStringMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::trojan::SimpleStringMessage* response) { return this->GetSnapShot(context, request, response); }));}
    void SetMessageAllocatorFor_GetSnapShot(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::trojan::SimpleStringMessage>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::trojan::SimpleStringMessage>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSnapShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSnapShot(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSnapShot(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::trojan::SimpleStringMessage* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteFile() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::trojan::SimpleStringMessage, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response) { return this->DeleteFile(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteFile(
        ::grpc::MessageAllocator< ::trojan::SimpleStringMessage, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::trojan::SimpleStringMessage, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteFile(
      ::grpc::CallbackServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UploadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UploadFile() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::trojan::FileMessage, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::trojan::FileMessage* request, ::google::protobuf::Empty* response) { return this->UploadFile(context, request, response); }));}
    void SetMessageAllocatorFor_UploadFile(
        ::grpc::MessageAllocator< ::trojan::FileMessage, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::trojan::FileMessage, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UploadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadFile(::grpc::ServerContext* /*context*/, const ::trojan::FileMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UploadFile(
      ::grpc::CallbackServerContext* /*context*/, const ::trojan::FileMessage* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DownloadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DownloadFile() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::trojan::SimpleStringMessage, ::trojan::FileMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::FileMessage* response) { return this->DownloadFile(context, request, response); }));}
    void SetMessageAllocatorFor_DownloadFile(
        ::grpc::MessageAllocator< ::trojan::SimpleStringMessage, ::trojan::FileMessage>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::trojan::SimpleStringMessage, ::trojan::FileMessage>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DownloadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DownloadFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DownloadFile(
      ::grpc::CallbackServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::FileMessage* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_PrintStringOnServer<WithCallbackMethod_ShutDownServer<WithCallbackMethod_ShutDownCancel<WithCallbackMethod_GetFileList<WithCallbackMethod_GetSnapShot<WithCallbackMethod_DeleteFile<WithCallbackMethod_UploadFile<WithCallbackMethod_DownloadFile<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_PrintStringOnServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PrintStringOnServer() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_PrintStringOnServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PrintStringOnServer(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShutDownServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ShutDownServer() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ShutDownServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownServer(::grpc::ServerContext* /*context*/, const ::trojan::ShutDownServerMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShutDownCancel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ShutDownCancel() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ShutDownCancel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownCancel(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFileList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFileList() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetFileList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileList(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSnapShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSnapShot() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetSnapShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSnapShot(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteFile() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UploadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UploadFile() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_UploadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadFile(::grpc::ServerContext* /*context*/, const ::trojan::FileMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DownloadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DownloadFile() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_DownloadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DownloadFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_PrintStringOnServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PrintStringOnServer() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_PrintStringOnServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PrintStringOnServer(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPrintStringOnServer(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShutDownServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ShutDownServer() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ShutDownServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownServer(::grpc::ServerContext* /*context*/, const ::trojan::ShutDownServerMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShutDownServer(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShutDownCancel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ShutDownCancel() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ShutDownCancel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownCancel(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShutDownCancel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFileList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFileList() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetFileList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileList(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFileList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSnapShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSnapShot() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetSnapShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSnapShot(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSnapShot(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteFile() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UploadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UploadFile() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_UploadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadFile(::grpc::ServerContext* /*context*/, const ::trojan::FileMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DownloadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DownloadFile() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_DownloadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DownloadFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDownloadFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PrintStringOnServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PrintStringOnServer() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PrintStringOnServer(context, request, response); }));
    }
    ~WithRawCallbackMethod_PrintStringOnServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PrintStringOnServer(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PrintStringOnServer(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ShutDownServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ShutDownServer() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ShutDownServer(context, request, response); }));
    }
    ~WithRawCallbackMethod_ShutDownServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownServer(::grpc::ServerContext* /*context*/, const ::trojan::ShutDownServerMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ShutDownServer(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ShutDownCancel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ShutDownCancel() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ShutDownCancel(context, request, response); }));
    }
    ~WithRawCallbackMethod_ShutDownCancel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownCancel(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ShutDownCancel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFileList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFileList() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFileList(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFileList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileList(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFileList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSnapShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSnapShot() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSnapShot(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSnapShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSnapShot(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSnapShot(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteFile() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteFile(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteFile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UploadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UploadFile() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UploadFile(context, request, response); }));
    }
    ~WithRawCallbackMethod_UploadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadFile(::grpc::ServerContext* /*context*/, const ::trojan::FileMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UploadFile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DownloadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DownloadFile() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DownloadFile(context, request, response); }));
    }
    ~WithRawCallbackMethod_DownloadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DownloadFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DownloadFile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PrintStringOnServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PrintStringOnServer() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::trojan::SimpleStringMessage, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::trojan::SimpleStringMessage, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedPrintStringOnServer(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PrintStringOnServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PrintStringOnServer(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPrintStringOnServer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::trojan::SimpleStringMessage,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShutDownServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ShutDownServer() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::trojan::ShutDownServerMessage, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::trojan::ShutDownServerMessage, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedShutDownServer(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ShutDownServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShutDownServer(::grpc::ServerContext* /*context*/, const ::trojan::ShutDownServerMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShutDownServer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::trojan::ShutDownServerMessage,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShutDownCancel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ShutDownCancel() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedShutDownCancel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ShutDownCancel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShutDownCancel(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShutDownCancel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFileList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFileList() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::trojan::SimpleStringMessage, ::trojan::SimpleStringMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::trojan::SimpleStringMessage, ::trojan::SimpleStringMessage>* streamer) {
                       return this->StreamedGetFileList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFileList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFileList(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFileList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::trojan::SimpleStringMessage,::trojan::SimpleStringMessage>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSnapShot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSnapShot() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::trojan::SimpleStringMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::trojan::SimpleStringMessage>* streamer) {
                       return this->StreamedGetSnapShot(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSnapShot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSnapShot(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::trojan::SimpleStringMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSnapShot(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::trojan::SimpleStringMessage>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteFile() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::trojan::SimpleStringMessage, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::trojan::SimpleStringMessage, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteFile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteFile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::trojan::SimpleStringMessage,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UploadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UploadFile() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::trojan::FileMessage, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::trojan::FileMessage, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUploadFile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UploadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UploadFile(::grpc::ServerContext* /*context*/, const ::trojan::FileMessage* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUploadFile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::trojan::FileMessage,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DownloadFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DownloadFile() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::trojan::SimpleStringMessage, ::trojan::FileMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::trojan::SimpleStringMessage, ::trojan::FileMessage>* streamer) {
                       return this->StreamedDownloadFile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DownloadFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DownloadFile(::grpc::ServerContext* /*context*/, const ::trojan::SimpleStringMessage* /*request*/, ::trojan::FileMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDownloadFile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::trojan::SimpleStringMessage,::trojan::FileMessage>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_PrintStringOnServer<WithStreamedUnaryMethod_ShutDownServer<WithStreamedUnaryMethod_ShutDownCancel<WithStreamedUnaryMethod_GetFileList<WithStreamedUnaryMethod_GetSnapShot<WithStreamedUnaryMethod_DeleteFile<WithStreamedUnaryMethod_UploadFile<WithStreamedUnaryMethod_DownloadFile<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_PrintStringOnServer<WithStreamedUnaryMethod_ShutDownServer<WithStreamedUnaryMethod_ShutDownCancel<WithStreamedUnaryMethod_GetFileList<WithStreamedUnaryMethod_GetSnapShot<WithStreamedUnaryMethod_DeleteFile<WithStreamedUnaryMethod_UploadFile<WithStreamedUnaryMethod_DownloadFile<Service > > > > > > > > StreamedService;
};

}  // namespace trojan


#endif  // GRPC_trojan_5fmessages_2eproto__INCLUDED
