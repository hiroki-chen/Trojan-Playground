// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: trojan_messages.proto

#include "trojan_messages.pb.h"
#include "trojan_messages.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace trojan {

static const char* TrojanBaseService_method_names[] = {
  "/trojan.TrojanBaseService/PrintStringOnServer",
  "/trojan.TrojanBaseService/ShutDownServer",
  "/trojan.TrojanBaseService/ShutDownCancel",
  "/trojan.TrojanBaseService/GetFileList",
  "/trojan.TrojanBaseService/GetSnapShot",
  "/trojan.TrojanBaseService/DeleteFile",
  "/trojan.TrojanBaseService/UploadFile",
  "/trojan.TrojanBaseService/DownloadFile",
};

std::unique_ptr< TrojanBaseService::Stub> TrojanBaseService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< TrojanBaseService::Stub> stub(new TrojanBaseService::Stub(channel, options));
  return stub;
}

TrojanBaseService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_PrintStringOnServer_(TrojanBaseService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ShutDownServer_(TrojanBaseService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ShutDownCancel_(TrojanBaseService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetFileList_(TrojanBaseService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetSnapShot_(TrojanBaseService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteFile_(TrojanBaseService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UploadFile_(TrojanBaseService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DownloadFile_(TrojanBaseService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status TrojanBaseService::Stub::PrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::trojan::SimpleStringMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_PrintStringOnServer_, context, request, response);
}

void TrojanBaseService::Stub::async::PrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::trojan::SimpleStringMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_PrintStringOnServer_, context, request, response, std::move(f));
}

void TrojanBaseService::Stub::async::PrintStringOnServer(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_PrintStringOnServer_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* TrojanBaseService::Stub::PrepareAsyncPrintStringOnServerRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::trojan::SimpleStringMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_PrintStringOnServer_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* TrojanBaseService::Stub::AsyncPrintStringOnServerRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncPrintStringOnServerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status TrojanBaseService::Stub::ShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::trojan::ShutDownServerMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ShutDownServer_, context, request, response);
}

void TrojanBaseService::Stub::async::ShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::trojan::ShutDownServerMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ShutDownServer_, context, request, response, std::move(f));
}

void TrojanBaseService::Stub::async::ShutDownServer(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ShutDownServer_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* TrojanBaseService::Stub::PrepareAsyncShutDownServerRaw(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::trojan::ShutDownServerMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ShutDownServer_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* TrojanBaseService::Stub::AsyncShutDownServerRaw(::grpc::ClientContext* context, const ::trojan::ShutDownServerMessage& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncShutDownServerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status TrojanBaseService::Stub::ShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ShutDownCancel_, context, request, response);
}

void TrojanBaseService::Stub::async::ShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ShutDownCancel_, context, request, response, std::move(f));
}

void TrojanBaseService::Stub::async::ShutDownCancel(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ShutDownCancel_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* TrojanBaseService::Stub::PrepareAsyncShutDownCancelRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ShutDownCancel_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* TrojanBaseService::Stub::AsyncShutDownCancelRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncShutDownCancelRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status TrojanBaseService::Stub::GetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::trojan::SimpleStringMessage* response) {
  return ::grpc::internal::BlockingUnaryCall< ::trojan::SimpleStringMessage, ::trojan::SimpleStringMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetFileList_, context, request, response);
}

void TrojanBaseService::Stub::async::GetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::SimpleStringMessage* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::trojan::SimpleStringMessage, ::trojan::SimpleStringMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetFileList_, context, request, response, std::move(f));
}

void TrojanBaseService::Stub::async::GetFileList(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::SimpleStringMessage* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetFileList_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>* TrojanBaseService::Stub::PrepareAsyncGetFileListRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::trojan::SimpleStringMessage, ::trojan::SimpleStringMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetFileList_, context, request);
}

::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>* TrojanBaseService::Stub::AsyncGetFileListRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetFileListRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status TrojanBaseService::Stub::GetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::trojan::SimpleStringMessage* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::trojan::SimpleStringMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetSnapShot_, context, request, response);
}

void TrojanBaseService::Stub::async::GetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::trojan::SimpleStringMessage* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::trojan::SimpleStringMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSnapShot_, context, request, response, std::move(f));
}

void TrojanBaseService::Stub::async::GetSnapShot(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::trojan::SimpleStringMessage* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSnapShot_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>* TrojanBaseService::Stub::PrepareAsyncGetSnapShotRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::trojan::SimpleStringMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetSnapShot_, context, request);
}

::grpc::ClientAsyncResponseReader< ::trojan::SimpleStringMessage>* TrojanBaseService::Stub::AsyncGetSnapShotRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetSnapShotRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status TrojanBaseService::Stub::DeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::trojan::SimpleStringMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteFile_, context, request, response);
}

void TrojanBaseService::Stub::async::DeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::trojan::SimpleStringMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteFile_, context, request, response, std::move(f));
}

void TrojanBaseService::Stub::async::DeleteFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteFile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* TrojanBaseService::Stub::PrepareAsyncDeleteFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::trojan::SimpleStringMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteFile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* TrojanBaseService::Stub::AsyncDeleteFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteFileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status TrojanBaseService::Stub::UploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::trojan::FileMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UploadFile_, context, request, response);
}

void TrojanBaseService::Stub::async::UploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::trojan::FileMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UploadFile_, context, request, response, std::move(f));
}

void TrojanBaseService::Stub::async::UploadFile(::grpc::ClientContext* context, const ::trojan::FileMessage* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UploadFile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* TrojanBaseService::Stub::PrepareAsyncUploadFileRaw(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::trojan::FileMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UploadFile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* TrojanBaseService::Stub::AsyncUploadFileRaw(::grpc::ClientContext* context, const ::trojan::FileMessage& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUploadFileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status TrojanBaseService::Stub::DownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::trojan::FileMessage* response) {
  return ::grpc::internal::BlockingUnaryCall< ::trojan::SimpleStringMessage, ::trojan::FileMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DownloadFile_, context, request, response);
}

void TrojanBaseService::Stub::async::DownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::FileMessage* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::trojan::SimpleStringMessage, ::trojan::FileMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DownloadFile_, context, request, response, std::move(f));
}

void TrojanBaseService::Stub::async::DownloadFile(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::FileMessage* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DownloadFile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::trojan::FileMessage>* TrojanBaseService::Stub::PrepareAsyncDownloadFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::trojan::FileMessage, ::trojan::SimpleStringMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DownloadFile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::trojan::FileMessage>* TrojanBaseService::Stub::AsyncDownloadFileRaw(::grpc::ClientContext* context, const ::trojan::SimpleStringMessage& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDownloadFileRaw(context, request, cq);
  result->StartCall();
  return result;
}

TrojanBaseService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      TrojanBaseService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< TrojanBaseService::Service, ::trojan::SimpleStringMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](TrojanBaseService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::trojan::SimpleStringMessage* req,
             ::google::protobuf::Empty* resp) {
               return service->PrintStringOnServer(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      TrojanBaseService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< TrojanBaseService::Service, ::trojan::ShutDownServerMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](TrojanBaseService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::trojan::ShutDownServerMessage* req,
             ::google::protobuf::Empty* resp) {
               return service->ShutDownServer(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      TrojanBaseService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< TrojanBaseService::Service, ::google::protobuf::Empty, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](TrojanBaseService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::google::protobuf::Empty* resp) {
               return service->ShutDownCancel(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      TrojanBaseService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< TrojanBaseService::Service, ::trojan::SimpleStringMessage, ::trojan::SimpleStringMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](TrojanBaseService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::trojan::SimpleStringMessage* req,
             ::trojan::SimpleStringMessage* resp) {
               return service->GetFileList(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      TrojanBaseService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< TrojanBaseService::Service, ::google::protobuf::Empty, ::trojan::SimpleStringMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](TrojanBaseService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::trojan::SimpleStringMessage* resp) {
               return service->GetSnapShot(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      TrojanBaseService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< TrojanBaseService::Service, ::trojan::SimpleStringMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](TrojanBaseService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::trojan::SimpleStringMessage* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteFile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      TrojanBaseService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< TrojanBaseService::Service, ::trojan::FileMessage, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](TrojanBaseService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::trojan::FileMessage* req,
             ::google::protobuf::Empty* resp) {
               return service->UploadFile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      TrojanBaseService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< TrojanBaseService::Service, ::trojan::SimpleStringMessage, ::trojan::FileMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](TrojanBaseService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::trojan::SimpleStringMessage* req,
             ::trojan::FileMessage* resp) {
               return service->DownloadFile(ctx, req, resp);
             }, this)));
}

TrojanBaseService::Service::~Service() {
}

::grpc::Status TrojanBaseService::Service::PrintStringOnServer(::grpc::ServerContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status TrojanBaseService::Service::ShutDownServer(::grpc::ServerContext* context, const ::trojan::ShutDownServerMessage* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status TrojanBaseService::Service::ShutDownCancel(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status TrojanBaseService::Service::GetFileList(::grpc::ServerContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::SimpleStringMessage* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status TrojanBaseService::Service::GetSnapShot(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::trojan::SimpleStringMessage* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status TrojanBaseService::Service::DeleteFile(::grpc::ServerContext* context, const ::trojan::SimpleStringMessage* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status TrojanBaseService::Service::UploadFile(::grpc::ServerContext* context, const ::trojan::FileMessage* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status TrojanBaseService::Service::DownloadFile(::grpc::ServerContext* context, const ::trojan::SimpleStringMessage* request, ::trojan::FileMessage* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace trojan

